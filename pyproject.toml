[tool.poetry]
name = "wildmenipedia"
version = "0.1.0"
description = "Agentic, world-scale knowledge system scaffold (FastAPI + LangGraph + Neo4j + Qdrant)"
authors = ["Wildbrain technology LLP <dev@wildbrain-technology.example>"]
readme = "README.md"
packages = [{ include = "grokalternative", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
pydantic = "^2.7.0"
pydantic-settings = "^2.4.0"
httpx = "^0.27.0"
langchain = "^0.2.0"
langgraph = "^0.0.58"
neo4j = "^5.25.0"
qdrant-client = "^1.10.0"
rdflib = "^7.0.0"
pandas = "^2.2.0"
jinja2 = "^3.1.4"
prometheus-client = "^0.23.1"
apscheduler = "^3.11.1"
sentry-sdk = {extras = ["fastapi"], version = "^2.43.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-asyncio = "^0.23.0"
ruff = "^0.6.0"
mypy = "^1.10.0"
types-requests = "^2.32.0.20240914"

[tool.ruff]
line-length = 100
target-version = "py310"
src = ["src"]

[tool.ruff.lint]
extend-select = ["I"]

[tool.mypy]
python_version = "3.10"
strict = false
warn_unused_ignores = true
warn_redundant_casts = true
show_error_codes = true
exclude = ["tests/"]

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"